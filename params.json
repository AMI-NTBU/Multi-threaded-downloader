{"name":"mt-downloader","tagline":"A multi threaded downloader made in nodejs","body":"# [mt-downloader](http://tusharmath.github.io/Multi-threaded-downloader)\r\n\r\n\r\nThis is a multi threaded downloader which is made in nodejs. It is highly configurable and extremely efficient.\r\n\r\n## Features\r\n1. Supports virtually unlimited number of threads.\r\n2. Auto selective re-download in case of failure.\r\n3. Supports checksum verification.\r\n\r\n\r\n## How to use\r\n1. Install [nodejs](http://nodejs.org/) (skip if already done).\r\n2. Install mt-downloader globally.\r\n\r\n```bash\r\nnpm install -g mt-downloader\r\n```\r\n\r\n3. Open the config file and set the default __download_path__ for your downloads. To know where your config file is located just type __mtd__ and search for the __Config:__ key word.\r\n\r\n```bash\r\nmtd\r\n```\r\n\r\n4. Start using eg.\r\n\r\n```bash\r\nmtd -u \"http://mirror.switch.ch/ftp/mirror/videolan/vlc/2.0.6/macosx/vlc-2.0.6.dmg\"\r\n```\r\n\r\nBy default it will take the last bit of the url as the file name, alternatively you can pass the name of the file with the __-f__ parameter.\r\n\r\n## Upcoming features!\r\n\r\n1. Have a user interface.\r\n2. Work as a proxy with video sites such as youtube so that buffering is completely removed.\r\n3. Support partial downloads for eg - downloading from 30 to 70% of the complete file.\r\n\r\n## Issues or Feature Requests?\r\nFeel free to create one [here](https://github.com/tusharmath/Multi-threaded-downloader/issues/new)\r\n\r\n__I Need help in developing code for this application so please contribute if you can!__","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}